name: "Custom Docker Build and Push"
description: "Build and push Docker images with caching"
inputs:
  repo:
    description: "Repository name"
    required: true
  branch:
    description: "Branch name"
    required: true
  commit-hash:
    description: "Commit hash"
    required: true
  docker-username:
    description: "Docker Hub username"
    required: true
  docker-password:
    description: "Docker Hub password"
    required: true
  env-file:
    description: ".env file contents"
    required: false

outputs:
  docker-image-name:
    description: "The full name of the Docker image"

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set Docker Image Name
      id: set-image-name
      run: |
        # generate docker image name
        echo "DOCKER_IMAGE_NAME=${{ inputs.docker-username }}/${{ inputs.branch }}_${{ inputs.repo }}:${{ inputs.commit-hash }}" >> $GITHUB_ENV
        # convert name to lowercase
        echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      shell: bash

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ inputs.commit-hash }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Copy .env file contents
      if: inputs.env-file
      run: |
        echo "${{ inputs.env-file }}" > .env
      shell: bash

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ inputs.DOCKER_IMAGE_NAME }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        builder: ${{ steps.setup-buildx.outputs.name }}

    - name: Move Docker cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      shell: bash

    - name: Set DOCKER_IMAGE_NAME output
      run: echo "docker-image-name=${{ inputs.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV
      shell: bash
